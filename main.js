require("dotenv").config();
const { API, Janru, Categories, Podborki } = require("./helpers/Helper");
const { Telegraf } = require("telegraf");

const bot = new Telegraf(process.env.BOT_TOKEN);

const start = async () => {
  try {
    bot.telegram.setMyCommands([
      { command: "/start", description: "Start to use our bot)" },
      { command: "/info", description: "Information about anime bot" },
      { command: "/clear_all", description: "Cler all messages from chat" },
      { command: "/example", description: "Show example of usage" },
      {
        command: "/subscribe",
        description: "Subscribe on the information of the new anime",
      },
      {
        command: "/unsubscribe",
        description: "Unsubscribe from the information of the new anime",
      },
    ]);

    bot.command("/start", (msg) => {
      const id = msg.chat.id;

      bot.telegram.sendMessage(id, "Choose the option in menu", {
        reply_markup: {
          inline_keyboard: [
            [{ text: "–í—Å–µ –∞–Ω–∏–º–µ", callback_data: "all_anime" }],
            [{ text: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data: "categories" }],
            [{ text: "–ñ–∞–Ω—Ä—ã", callback_data: "janru" }],
            [{ text: "–ü–æ–¥–±–æ—Ä–∫–∏", callback_data: "groups" }],
            [{ text: "üîç –ü–æ–∏—Å–∫ –ø–æ –≥–æ–¥–∞–º", callback_data: "search_for_year" }],
            [
              {
                text: "üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é",
                callback_data: "search_for_name",
              },
            ],
          ],
        },
      });

      bot.on("callback_query", async (ctx) => {
        const id = msg.chat.id;
        const text = ctx.update.callback_query.data;
        // const data = msg.message.chat.id;

        switch (text) {
          case "all_anime":
            await new API("https://animang.ru", 130).get_path_anime();
            break;
          case "categories":
            const _categories = new Categories();

            _categories
              .get_categories()
              .then((data) => {
                for (let property of Object.values(data)) {
                  console.log(property);
                }
              })
              .catch((e) => console.log(e));

            msg.telegram.sendMessage(id, "Categories of the anime", {
              reply_markup: {
                inline_keyboard: [
                  [
                    { text: "üÜï –ù–æ–≤–∏–Ω–∫–∏", callback_data: "new" },
                    { text: "üé• –§–∏–ª—å–º—ã", callback_data: "cinemas" },
                  ],
                  [
                    { text: "üìΩ –°–µ—Ä–∏–∞–ª—ã", callback_data: "serial" },
                    { text: "‚è± –û–Ω–≥–æ–∏–Ω–≥–∏", callback_data: "ongoing" },
                  ],
                  [
                    { text: "üì∫ –¢–≤", callback_data: "tv" },
                    { text: "üé® –û–≤–∞", callback_data: "ova" },
                  ],
                  [
                    { text: "üï∏ –û–Ω–∞", callback_data: "ona" },
                    { text: "üì∫ –¢–≤-—Å–ø–µ—à–ª", callback_data: "tv-speshl" },
                  ],
                  [
                    { text: "üóΩ –ê–Ω–æ–Ω—Å—ã", callback_data: "anounce" },
                    { text: "üîù –¢–æ–ø", callback_data: "top" },
                  ],
                  [
                    { text: "üìú –ü–æ–¥–±–æ—Ä–∫–∏", callback_data: "podborki" },
                    { text: "üçÄ –†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µ", callback_data: "random" },
                  ],
                  [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back" }],
                ],
              },
            });
            break;
          case "janru":
            const janru = new Janru();

            janru.get_janru();

            msg.telegram.sendMessage(id, "Types of anime", {
              reply_markup: {
                inline_keyboard: [
                  [
                    { text: "üòÇ –ö–æ–º–µ–¥–∏–∏", callback_data: "comedy" },
                    { text: "ü§ñ –ú–µ—Ö–∞", callback_data: "mexa" },
                  ],
                  [
                    { text: "üïµÔ∏è‚Äç‚ôÇÔ∏è –î–µ—Ç–µ–∫—Ç–∏–≤—ã", callback_data: "detective" },
                    { text: "üé≠ –î—Ä–∞–º—ã", callback_data: "darama" },
                  ],
                  [
                    { text: "üîÆ –ú–∏—Å—Ç–∏–∫–∞", callback_data: "mystique" },
                    { text: "üëΩ –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", callback_data: "fantastic" },
                  ],
                  [
                    { text: "üëπ –§—ç–Ω—Ç–µ–∑–∏", callback_data: "fentesi" },
                    { text: "(‚ìø_‚ìø) –ü–∞—Ä–æ–¥–∏—è", callback_data: "parody" },
                  ],
                  [
                    { text: "üåπ –†–æ–º–∞–Ω—Ç–∏–∫–∞", callback_data: "romantique" },
                    { text: "üéû –¢—Ä–∏–ª–ª–µ—Ä—ã", callback_data: "triller" },
                  ],
                  [
                    { text: "üé∏ –ú—É–∑—ã–∫–∞", callback_data: "music" },
                    { text: "‚òÄ –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å", callback_data: "everyday" },
                  ],
                  [
                    { text: "üëª –£–∂–∞—Å—ã", callback_data: "uzhasy" },
                    {
                      text: "üó° –ë–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
                      callback_data: "war_isvustvo",
                    },
                  ],
                  [
                    { text: "ü§æ‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç", callback_data: "sport" },
                    { text: "üßï –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ", callback_data: "history" },
                  ],
                  [
                    { text: "üíè –≠—Ç—Ç–∏", callback_data: "etti" },
                    { text: "üèπ –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", callback_data: "adventure" },
                  ],
                  [
                    { text: "üéé –°—ë–¥–∑—ë", callback_data: "sedze" },
                    { text: "üé¥ –°—ë–Ω–µ–Ω", callback_data: "senen" },
                  ],
                  [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back" }],
                ],
              },
            });
            break;
          case "groups":
            const mix_groups = new Podborki();

            mix_groups.get_mix_groups();

            bot.telegram.sendMessage(id, "Change some group of anime", {
              reply_markup: {
                inline_keyboard: [
                  [
                    {
                      text: "üéâ –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–Ω–∏–º–µ",
                      callback_data: "the_most_popular",
                    },
                  ],
                  [
                    {
                      text: "‚è≥ –û –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –≤–æ –≤—Ä–µ–º–µ–Ω–∏",
                      callback_data: "time_adventure",
                    },
                  ],
                  [
                    {
                      text: "üé¶ –õ—É—á—à–∏–µ –ø–æ–ª–Ω–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–µ –∞–Ω–∏–º–µ",
                      callback_data: "best_cinema",
                    },
                  ],
                  [
                    {
                      text: "üéå –ê–Ω–∏–º–µ —Å —è–ø–æ–Ω—Å–∫–æ–π –º–∏—Ñ–æ–ª–æ–≥–∏–∏",
                      callback_data: "japan_mifology",
                    },
                  ],
                  [{ text: "ü§è –ú–∏–Ω–∏-–∞–Ω–∏–º–µ", callback_data: "mini_anime" }],
                  [
                    {
                      text: "üåå –ê–Ω–∏–º–µ –ø—Ä–æ –∫–æ—Å–º–æ—Å",
                      callback_data: "about_space",
                    },
                  ],
                  [{ text: "U+1F1E8 –ö–∏—Ç–∞–π—Å–∫–æ–µ –∞–Ω–∏–º–µ", callback_data: "china" }],
                  [
                    {
                      text: "‚öõ –ê–Ω–∏–º–µ –ø—Ä–æ –∞–∫–∞–ª–∏–ø—Å–∏—Å",
                      callback_data: "apocalypsis",
                    },
                  ],
                  [{ text: "üßù‚Äç‚ôÇÔ∏èüßù‚Äç‚ôÄÔ∏è –ê–Ω–∏–º–µ —Å —ç–ª—å—Ñ–∞–º–∏", callback_data: "elfs" }],
                  [
                    {
                      text: "üéÆ –õ—É—á—à–∏–µ –∞–Ω–∏–º–µ –ø–æ –∏–≥—Ä–∞–º",
                      callback_data: "about_games",
                    },
                  ],
                  [
                    {
                      text: "üë∏ –õ—É—á—à–∏–µ —Ñ–µ–Ω—Ç–µ–∑–∏-–∞–Ω–∏–º–µ",
                      callback_data: "best_fantasy",
                    },
                  ],
                  [
                    {
                      text: "üòπ –õ—É—á—à–∏–µ –∫–æ–º–µ–¥–∏–π–Ω—ã–µ –∞–Ω–∏–º–µ",
                      callback_data: "best_comedy",
                    },
                  ],
                  [{ text: "üßù‚Äç‚ôÇÔ∏è –ê–Ω–∏–º–µ –ø—Ä–æ –º–∞–≥–∏—é", callback_data: "magic" }],
                  [{ text: "üè´ –ê–Ω–∏–º–µ –ø—Ä–æ —à–∫–æ–ª—É", callback_data: "school" }],
                  [
                    {
                      text: "üíñ –õ—É—á—à–∏–µ –∞–Ω–∏–º–µ –æ –ª—é–±—å–≤–∏",
                      callback_data: "best_love",
                    },
                  ],
                  [
                    {
                      text: "üßõ‚Äç‚ôÇÔ∏è –ê–Ω–∏–º–µ –ø—Ä–æ –≤–∞–º–ø–∏—Ä–æ–≤",
                      callback_data: "wampires",
                    },
                  ],
                  [
                    {
                      text: "üîù –¢–æ–ø –∞–Ω–∏–º–µ 2019 –≥–æ–¥–∞",
                      callback_data: "top_2019",
                    },
                  ],
                  [{ text: "üëæ –ê–Ω–∏–º–µ —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏", callback_data: "monsters" }],
                  [
                    {
                      text: "üòã –°–∞–º—ã–µ –∫–∞–≤–∞–π–Ω—ã–µ –∞–Ω–∏–º–µ",
                      callback_data: "the_most_kavainy",
                    },
                  ],
                  [
                    {
                      text: "üîù –õ—É—á—à–∏–µ –∞–Ω–∏–º–µ 2018 –≥–æ–¥–∞",
                      callback_data: "best_2018",
                    },
                  ],
                  [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back" }],
                ],
              },
            });
            break;
          case "search_for_year":
            msg.telegram.sendMessage(id, "Search for year (from 1997 y.)");
            break;
          case "search_for_name":
            msg.telegram.sendMessage(id, "Search for name");
            break;
        }
      });
    });

    bot.command("/info", (msg) => {
      msg.telegram.sendMessage(
        msg.chat.id,
        "This bot can search anime and you can find anime under mix groups, janres, categories and other"
      );
    });

    bot.command("/clear_all", (msg) => {
      msg.telegram.deleteMessage(msg.chat.id, msg.message.message_id - 1); //Fix later
    });

    bot.command("/subscribe", (msg) => {
      msg.telegram.sendMessage(
        msg.chat.id,
        "Choose category, which you can listen in real time"
      );
    });

    bot.command("/unsubscribe", (msg) => {
      msg.telegram.sendMessage(msg.chat.id, "Unsubscribe from category");
    });

    bot.launch();
  } catch (e) {
    console.log(e);
  }
};

start();
